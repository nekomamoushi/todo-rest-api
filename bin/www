#!/usr/bin/env node

const http = require('http');

const app = require('../app');
const connectDatabase = require('../config/database');

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Get port from environment and store in Express.
 */
const port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

/**
 * Create HTTP server.
 */
const server = http.createServer(app);

/**
 * Handle unhandled promise rejections
 */
process.on('unhandledRejection', (err, promise) => {
  console.log(err.message);
  // Close server and exit process
  server.close(() => process.exit(1));
});

/**
 * Listen on provided port, on all network interfaces.
 */
connectDatabase()
  .then((result) => {
    server.listen(port);
  })
  .catch((error) => {
    console.log('Connection to Mongoose failed!');
    console.error('ERROR: ' + error.message);
    process.exit(1);
  });
